//
// Generated by Microsoft (R) HLSL Shader Compiler 9.22.949.2248
//
// Parameters:
//
//   float4 RadialBlurCenter;
//   float4 RadialBlurParameters;
//   bool bBloom;
//   bool bNoise;
//   bool bNoiseLum;
//   bool bPost;
//   bool bWaves;
//   float4 cBloomWeights;
//   float4 cExtractTerms;
//   float3 cLevelsBias;
//   float3 cLevelsGamma;
//   float3 cLevelsScale;
//   float4 cMiscTerms;
//   float4 cNoiseOffsets;
//   float4 cNoiseTerms;
//   float4 cTint;
//   float4 gColorControl;
//   sampler2D sBloom0;
//   sampler2D sBloom1;
//   sampler2D sNoise1;
//   sampler2D sSceneTexPoint;
//   sampler2D sTonemap;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   bPost                b0       1
//   bBloom               b1       1
//   bNoise               b2       1
//   bNoiseLum            b3       1
//   bWaves               b4       1
//   cExtractTerms        c2       1
//   cMiscTerms           c8       1
//   cTint                c9       1
//   cBloomWeights        c11      1
//   cNoiseTerms          c22      1
//   cNoiseOffsets        c23      1
//   cLevelsScale         c25      1
//   cLevelsBias          c26      1
//   cLevelsGamma         c27      1
//   gColorControl        c32      1
//   RadialBlurParameters c192     1
//   RadialBlurCenter     c194     1
//   sSceneTexPoint       s0       1
//   sBloom0              s1       1
//   sBloom1              s2       1
//   sTonemap             s4       1
//   sNoise1              s5       1
//

    ps_3_0
    def c0, 0, 0, 0.125, 1
    def c1, 0.300000012, 0.600000024, 0.100000001, 0
    def c3, 1, 0, 0.5, 0
    defi i0, 7, 0, 0, 0
    dcl_texcoord v0.zw
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s4
    dcl_2d s5
    texld r0, v0.zwzw, s0
    add r1.xy, -c194, v0.zwzw
    dp2add r1.z, r1, r1, c0.x
    rsq r1.z, r1.z
    rcp r1.z, r1.z
    add r1.z, r1.z, -c192.y
    max r2.x, r1.z, c0.x
    min r1.z, c192.z, r2.x
    mul r1.z, r1.z, c192.w
    mul r1.xy, r1, r1.z
    mov r2, r0
    mov r3.xy, v0.zwzw
    rep i0
      mad r3.xy, r1, -c0.z, r3
      texld r4, r3, s0
      add r2, r2, r4
    endrep
    mul r2, r2, c0.z
    cmp r0, -r1.z, r0.xzyw, r2.xzyw
    if b4
      mov r1.xw, c0
      mad r1.yz, c8.w, r1.xwxw, v0.xzww
      texld r2, r1.yzzw, s0
      mad r1.xy, c8.w, -r1.wxzw, v0.zwzw
      texld r1, r1, s0
      mov r0.x, r2.x
      mov r0.y, r1.z
    endif
    max r1.xyz, r0.xzyw, c0.x
    min r2.xyz, c2.w, r1
    texld r1, c0.x, s4
    mul r1.yzw, r2.xxyz, r1.x
    if b1
      texld r3, v0.zwzw, s2
      texld r4, v0.zwzw, s1
      mul r4.xyz, r4, c11.x
      mad r3.xyz, c11.y, r3, r4
      mad r1.yzw, r2.xxyz, r1.x, r3.xxyz
    endif
    mul_pp r2.xyz, r1.yzww, c32.z
    if b0
      dp3_pp r1.x, r2, c1
      mad r1.yzw, r1, c32.z, -r1.x
      mad r1.xyz, c8.x, r1.yzww, r1.x
      mad r1.xyz, r1, c8.y, c8.z
      mul r2.xyz, r1, c9
    endif
    mov r1.xyz, c25
    mad_sat r1.xyz, r2, r1, c26
    log r2.x, r1.x
    log r2.y, r1.y
    log r2.z, r1.z
    mul r1.xyz, r2, c27
    exp r0.x, r1.x
    exp r0.z, r1.y
    exp r0.y, r1.z
    if b2
      mul r1.zw, c22.xyxy, v0
      mov r1.xy, v0.zwzw
      mov r2.xy, c22
      mad r2, r2.xyxx, c3.xxyy, c3.yyzz
      mad r1, r1, r2, c23
      texld r2, r1, s5
      texld r1, r1.zwzw, s5
      add r1, r2, r1
      add r1, r1.yzwx, -c0.w
      if b3
        mov r1.xyz, r1.w
      endif
      add r2.x, -r0.z, c0.w
      mul r2.x, r0.z, r2.x
      mad r2.x, r2.x, c22.w, c22.z
      mad oC0, r2.x, r1.wxyz, r0.xzyw
    else
      mov oC0, r0.xzyw
    endif

// approximately 90 instruction slots used (9 texture, 81 arithmetic)
