//
// Generated by Microsoft (R) HLSL Shader Compiler 9.22.949.2248
//
// Parameters:
//
//   bool bBloom;
//   bool bNoise;
//   bool bNoiseLum;
//   bool bPost;
//   bool bWaves;
//   float4 cBloomWeights;
//   float4 cExtractTerms;
//   float3 cLevelsBias;
//   float3 cLevelsGamma;
//   float3 cLevelsScale;
//   float4 cMiscTerms;
//   float4 cNoiseOffsets;
//   float4 cNoiseTerms;
//   float4 cTint;
//   float4 gColorControl;
//   sampler2D sBloom0;
//   sampler2D sBloom1;
//   sampler2D sNoise1;
//   sampler2D sSceneTexPoint;
//   sampler2D sTonemap;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   bPost          b0       1
//   bBloom         b1       1
//   bNoise         b2       1
//   bNoiseLum      b3       1
//   bWaves         b4       1
//   cExtractTerms  c2       1
//   cMiscTerms     c8       1
//   cTint          c9       1
//   cBloomWeights  c11      1
//   cNoiseTerms    c22      1
//   cNoiseOffsets  c23      1
//   cLevelsScale   c25      1
//   cLevelsBias    c26      1
//   cLevelsGamma   c27      1
//   gColorControl  c32      1
//   sSceneTexPoint s0       1
//   sBloom0        s1       1
//   sBloom1        s2       1
//   sTonemap       s4       1
//   sNoise1        s5       1
//

    ps_3_0
    def c0, 0.300000012, 0.600000024, 0.100000001, 0
    def c1, 1, 0, 0.5, -1
    dcl_texcoord v0.zw
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s4
    dcl_2d s5
    texld r0, v0.zwzw, s0
    if b4
      mov r1.xy, c1
      mad r1.zw, c8.w, r1.xyxy, v0
      texld r2, r1.zwzw, s0
      mad r1.xy, c8.w, -r1, v0.zwzw
      texld r1, r1, s0
      mov r2.y, r1.z
    else
      mov r2.xy, r0.xzzw
    endif
    mov r2.z, r0.y
    max r1.xyz, r2.xzyw, c1.y
    min r2.xyz, c2.w, r1
    texld r1, c1.y, s4
    mul r1.yzw, r2.xxyz, r1.x
    if b1
      texld r3, v0.zwzw, s2
      texld r4, v0.zwzw, s1
      mul r4.xyz, r4, c11.x
      mad r3.xyz, c11.y, r3, r4
      mad r1.yzw, r2.xxyz, r1.x, r3.xxyz
    endif
    mul_pp r2.xyz, r1.yzww, c32.z
    if b0
      dp3_pp r1.x, r2, c0
      mad r1.yzw, r1, c32.z, -r1.x
      mad r1.xyz, c8.x, r1.yzww, r1.x
      mad r1.xyz, r1, c8.y, c8.z
      mul r2.xyz, r1, c9
    endif
    mov r1.xyz, c25
    mad_sat r1.xyz, r2, r1, c26
    log r2.x, r1.x
    log r2.y, r1.y
    log r2.z, r1.z
    mul r1.xyz, r2, c27
    exp r0.x, r1.x
    exp r0.y, r1.y
    exp r0.z, r1.z
    if b2
      mul r1.zw, c22.xyxy, v0
      mov r1.xy, v0.zwzw
      mov r2.xyz, c1
      mad r2, c22.xyxx, r2.xxyy, r2.yyzz
      mad r1, r1, r2, c23
      texld r2, r1, s5
      texld r1, r1.zwzw, s5
      add r1, r2, r1
      add r1, r1.yzwx, c1.w
      if b3
        mov r1.xyz, r1.w
      endif
      add r2.x, -r0.y, c1.x
      mul r2.x, r0.y, r2.x
      mad r2.x, r2.x, c22.w, c22.z
      mad oC0, r2.x, r1.wxyz, r0
    else
      mov oC0, r0
    endif

// approximately 70 instruction slots used (8 texture, 62 arithmetic)
