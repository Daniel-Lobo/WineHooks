//
// Generated by Microsoft (R) HLSL Shader Compiler 9.22.949.2248
//
// Parameters:
//
//   float4 cViewport;
//   float4x4 cWorldToProjVP;
//   sampler2D sHOM;
//   sampler2D sHOMLight;
//
//
// Registers:
//
//   Name           Reg   Size
//   -------------- ----- ----
//   cViewport      c0       1
//   cWorldToProjVP c1       4
//   sHOMLight      s0       1
//   sHOM           s1       1
//

    ps_3_0
    def c5, 0, 1, 2, -2
    def c6, -1, 1, 0, 0.5
    def c7, -0.5, 0.5, -3, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_2d s0
    dcl_2d s1
    cmp r0.x, -v1_abs.z, c5.x, c5.y
    mul r1.xyz, c5.yyxw, v0.xyxw
    mov r1.w, v1.x
    texldl r1, r1, s0
    mul r2.xyz, c5.yyxw, v0.zyxw
    mov r2.w, v1.x
    texldl r2, r2, s0
    mul r3.xyz, c5.yyxw, v0.xwxw
    mov r3.w, v1.x
    texldl r3, r3, s0
    mul r4.xyz, c5.yyxw, v0.zwxw
    mov r4.w, v1.x
    texldl r4, r4, s0
    max r0.y, r1.x, r2.x
    max r0.z, r3.x, r4.x
    max r1.x, r0.y, r0.z
    add r0.y, r1.x, -v1.y
    cmp r0.y, r0.y, c5.y, c5.x
    mul r0.x, r0.x, r0.y
    if_ne r0.x, -r0.x
      cmp r0.w, -v1_abs.w, r1.x, c5.y
      mov r1.xy, v0
      mov r1.z, v1.y
      mov r2.yzw, c5
      mad r1.xyz, r1, r2.zwyw, c6
      mov r0.yz, v0.xzww
      mad r2.xyz, r0.yzww, r2.zwyw, c6
      mov r1.w, c5.y
      dp4 r0.y, r1, c1
      dp4 r0.z, r1, c2
      dp4 r3.x, r1, c3
      dp4 r3.y, r1, c4
      add r3.zw, r0.xyyz, r3.y
      cmp r3.zw, r3, c5.x, c5.y
      cmp r4.x, r3.x, c5.x, c5.y
      add r4.yz, -r0, r3.y
      cmp r4.yz, r4, c5.x, c5.y
      add r4.w, -r3.x, r3.y
      cmp r4.w, r4.w, c5.x, c5.y
      abs r0.w, r3.x
      rcp r3.x, r3.y
      mul r0.yzw, r0, r3.x
      min r5.xyz, r0.yzww, c5.y
      max r3.xy, -c5.y, r0.yzzw
      mov r6.x, r2.x
      mov r6.yzw, r1
      dp4 r0.y, r6, c1
      dp4 r0.z, r6, c2
      dp4 r5.w, r6, c3
      dp4 r7.x, r6, c4
      add r7.yz, r0, r7.x
      cmp r7.yz, r7, c5.x, c5.y
      mul r3.zw, r3, r7.xyyz
      cmp r7.y, r5.w, c5.x, c5.y
      mul r4.x, r4.x, r7.y
      add r7.yz, -r0, r7.x
      cmp r7.yz, r7, c5.x, c5.y
      mul r4.yz, r4, r7
      add r7.y, -r5.w, r7.x
      cmp r7.y, r7.y, c5.x, c5.y
      mul r4.w, r4.w, r7.y
      abs r0.w, r5.w
      rcp r5.w, r7.x
      mul r0.yzw, r0, r5.w
      min r7.xyz, r0.yzww, r5
      max r5.xy, r3, r0.yzzw
      mov r8.xzw, r1
      mov r8.y, r2.y
      dp4 r0.y, r8, c1
      dp4 r0.z, r8, c2
      dp4 r1.z, r8, c3
      dp4 r3.x, r8, c4
      add r5.zw, r0.xyyz, r3.x
      cmp r5.zw, r5, c5.x, c5.y
      mul r3.yz, r3.xzww, r5.xzww
      cmp r3.w, r1.z, c5.x, c5.y
      mul r3.w, r4.x, r3.w
      add r5.zw, -r0.xyyz, r3.x
      cmp r5.zw, r5, c5.x, c5.y
      mul r4.xy, r4.yzzw, r5.zwzw
      add r4.z, -r1.z, r3.x
      cmp r4.z, r4.z, c5.x, c5.y
      mul r4.z, r4.w, r4.z
      abs r0.w, r1.z
      rcp r1.z, r3.x
      mul r0.yzw, r0, r1.z
      min r9.xyz, r0.yzww, r7
      max r7.xy, r5, r0.yzzw
      mov r8.xzw, r6
      dp4 r0.y, r8, c1
      dp4 r0.z, r8, c2
      dp4 r1.z, r8, c3
      dp4 r3.x, r8, c4
      add r5.xy, r0.yzzw, r3.x
      cmp r5.xy, r5, c5.x, c5.y
      mul r3.yz, r3, r5.xxyw
      cmp r4.w, r1.z, c5.x, c5.y
      mul r3.w, r3.w, r4.w
      add r5.xy, -r0.yzzw, r3.x
      cmp r5.xy, r5, c5.x, c5.y
      mul r4.xy, r4, r5
      add r4.w, -r1.z, r3.x
      cmp r4.w, r4.w, c5.x, c5.y
      mul r4.z, r4.z, r4.w
      abs r0.w, r1.z
      rcp r1.z, r3.x
      mul r0.yzw, r0, r1.z
      min r5.xyz, r0.yzww, r9
      max r9.xy, r7, r0.yzzw
      mov r2.xyw, r1
      dp4 r0.y, r2, c1
      dp4 r0.z, r2, c2
      dp4 r1.x, r2, c3
      dp4 r1.y, r2, c4
      add r1.zw, r0.xyyz, r1.y
      cmp r1.zw, r1, c5.x, c5.y
      mul r1.zw, r3.xyyz, r1
      cmp r2.y, r1.x, c5.x, c5.y
      mul r2.y, r3.w, r2.y
      add r3.xy, -r0.yzzw, r1.y
      cmp r3.xy, r3, c5.x, c5.y
      mul r3.xy, r4, r3
      add r3.z, -r1.x, r1.y
      cmp r3.z, r3.z, c5.x, c5.y
      mul r3.z, r4.z, r3.z
      abs r0.w, r1.x
      rcp r1.x, r1.y
      mul r0.yzw, r0, r1.x
      min r4.xyz, r0.yzww, r5
      max r1.xy, r9, r0.yzzw
      mov r6.z, r2.z
      dp4 r0.y, r6, c1
      dp4 r0.z, r6, c2
      dp4 r3.w, r6, c3
      dp4 r4.w, r6, c4
      add r5.xy, r0.yzzw, r4.w
      cmp r5.xy, r5, c5.x, c5.y
      mul r1.zw, r1, r5.xyxy
      cmp r5.x, r3.w, c5.x, c5.y
      mul r2.y, r2.y, r5.x
      add r5.xy, -r0.yzzw, r4.w
      cmp r5.xy, r5, c5.x, c5.y
      mul r3.xy, r3, r5
      add r5.x, -r3.w, r4.w
      cmp r5.x, r5.x, c5.x, c5.y
      mul r3.z, r3.z, r5.x
      abs r0.w, r3.w
      rcp r3.w, r4.w
      mul r0.yzw, r0, r3.w
      min r5.xyz, r0.yzww, r4
      max r4.xy, r1, r0.yzzw
      mov r8.xzw, r2
      dp4 r0.y, r8, c1
      dp4 r0.z, r8, c2
      dp4 r1.x, r8, c3
      dp4 r1.y, r8, c4
      add r2.xz, r0.yyzw, r1.y
      cmp r2.xz, r2, c5.x, c5.y
      mul r1.zw, r1, r2.xyxz
      cmp r2.x, r1.x, c5.x, c5.y
      mul r2.x, r2.y, r2.x
      add r2.yz, -r0, r1.y
      cmp r2.yz, r2, c5.x, c5.y
      mul r2.yz, r3.xxyw, r2
      add r2.w, -r1.x, r1.y
      cmp r2.w, r2.w, c5.x, c5.y
      mul r2.w, r3.z, r2.w
      abs r0.w, r1.x
      rcp r1.x, r1.y
      mul r0.yzw, r0, r1.x
      min r3.xyz, r0.yzww, r5
      max r1.xy, r4, r0.yzzw
      mov r8.xzw, r6
      dp4 r0.y, r8, c1
      dp4 r0.z, r8, c2
      dp4 r3.w, r8, c3
      dp4 r4.x, r8, c4
      add r4.yz, r0, r4.x
      cmp r4.yz, r4, c5.x, c5.y
      mul r4.yz, r1.xzww, r4
      cmp r1.z, r3.w, c5.x, c5.y
      mul r4.w, r2.x, r1.z
      add r1.zw, -r0.xyyz, r4.x
      cmp r1.zw, r1, c5.x, c5.y
      mul r2.xy, r2.yzzw, r1.zwzw
      add r1.z, -r3.w, r4.x
      cmp r1.z, r1.z, c5.x, c5.y
      mul r2.z, r2.w, r1.z
      abs r0.w, r3.w
      rcp r1.z, r4.x
      mul r0.yzw, r0, r1.z
      min r5.xyz, r0.yzww, r3
      max r3.xy, r1, r0.yzzw
      dp3 r0.y, r4.yzww, c5.y
      cmp r0.y, -r0.y, c5.x, c5.y
      dp3 r0.z, r2, c5.y
      add r0.y, r0.y, r0.z
      cmp r1.xyz, r5.z, r5, c6.xxzw
      cmp r0.zw, r5.z, r3.xyxy, c5.y
      max r2.xyz, r1, c6.xxzw
      min r1.xy, r0.zwzw, c5.y
      mad r3.x, r2.x, c6.w, c6.w
      mad r3.y, r1.y, c7.x, c7.y
      mad r4.x, r1.x, c6.w, c6.w
      mad r4.y, r2.y, c7.x, c7.y
      cmp r0.y, -r0.y, c5.y, c5.x
      add r0.zw, -r3.xyxy, r4.xyxy
      mul r0.zw, r0, c0.xyxy
      max r1.z, r0.z, r0.w
      log r0.z, r1.z
      frc r0.w, -r0.z
      add r0.z, r0.z, r0.w
      add r0.w, r0.z, -c5.y
      exp r1.z, -r0.w
      mul r1.zw, r1.z, c0.xyxy
      mul r2.xy, r3, r1.zwzw
      frc r5.xy, r2
      add r2.xy, r2, -r5
      mul r1.zw, r4.xyxy, r1
      frc r5.xy, -r1.zwzw
      add r1.zw, r1, r5.xyxy
      add r1.zw, -r2.xyxy, r1
      add r1.zw, r1, c7.z
      cmp r1.zw, r1, c5.x, c5.y
      mul r1.z, r1.w, r1.z
      cmp r1.z, -r1.z, r0.z, r0.w
      cmp r3.w, r0.w, r1.z, r0.z
      mov r3.z, c5.x
      texldl r5, r3, s1
      mad r1.xy, r1, c7.yxzw, c7.y
      mov r1.zw, r3
      texldl r6, r1, s1
      mov r4.xzw, r3
      texldl r3, r4, s1
      mov r4.xzw, r1
      texldl r1, r4, s1
      max r0.z, r5.x, r6.x
      max r0.w, r3.x, r1.x
      max r1.x, r0.z, r0.w
      add r0.z, -r2.z, r1.x
      cmp r0.z, r0.z, c5.y, c5.x
      mul r0.x, r0.y, r0.z
    endif
    mov oC0, r0.x

// approximately 254 instruction slots used (16 texture, 238 arithmetic)
