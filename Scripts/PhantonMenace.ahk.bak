;REMOTE SCRIPT START

global g_SwapChainHooks := {}
ISURFACE4_VTBL.flip             := registercallback("AltIDirectDrawSurface4_flip", "f") 
ISURFACE4_VTBL.lock             := registercallback("RenderTarget4_Lock", "f") 
ISURFACE4_VTBL.Unlock           := registercallback("RenderTarget4_Unlock", "f") 
logerr(IDirectDrawSurface4.Hook("blt"))

Alt_CreateSurface(pIDirectDraw4, pSurfaceDesc, ppSurface, pIUnknown)
{
	static SurfaceDesc 
	SurfaceDesc ?: SurfaceDesc := ddSurfaceDesc2.clone()		
	SurfaceDesc[] := pSurfaceDesc 
	
	r := IDirectDraw4_CreateSurface(pIDirectDraw4, pSurfaceDesc, ppSurface, pIUnknown)
	
	if (SurfaceDesc.ddsCaps.dwCaps & DDSCAPS_PRIMARYSURFACE) {
		(prim := struct("void lpVtbl"))[] := g_globals.primary4
		prim.lpVtbl := ISURFACE4_VTBL[]	
	}	
	return r
}


AltIDirect3D3_CreateDevice(p1, p2, p3, p4, p5)
{
	(dev_surf := struct("void lpVtbl"))[] := p3
	dev_surf.lpVtbl := ISURFACE4_VTBL[]	
	g_globals.surrogate   := new SurrogateSurface("RG6B", ,True)
	g_globals.surrogateb  := new SurrogateSurface("X8RGB", g_globals.res.w << 16 | g_globals.res.h ,True)
	return IDirect3D3_CreateDevice(p1, p2, p3,p4, p5)
}

RenderTarget4_Lock(p1, p2, p3, p4, p5)
{
	if (GetSurfaceCaps3(p1) & DDSCAPS_3DDEVICE)
	{
		if not g_globals.donot
			dllcall(IDirectDrawSurface4.blt, uint, g_globals.surrogateb.surface4, uint, 0, uint, p1, uint, 0
										   , uint, DDBLTFAST_NOCOLORKEY | DDBLT_WAIT, uint, DDBLTFX[], uint)
		g_globals.donot := False								   
		return dllcall(IDirectDrawSurface4.lock, uint, g_Globals.surrogate.Surface4, uint, p2, uint, p3, uint, p4, uint, p5)
	}
	return dllcall(IDirectDrawSurface4.lock, uint, p1, uint, p2, uint, p3, uint, p4, uint, p5)
}

RenderTarget4_Unlock(p1, p2)
{
	
	if (GetSurfaceCaps3(p1) & DDSCAPS_3DDEVICE)
	{
		r := dllcall(IDirectDrawSurface4.Unlock, uint, g_Globals.surrogate.Surface4, uint, p2)
		
		dllcall(IDirectDrawSurface4.blt, uint, p1, uint, 0, uint, g_globals.surrogateb.surface4, uint, 0
											 , uint, DDBLTFAST_NOCOLORKEY | DDBLT_WAIT, uint, DDBLTFX[], uint)	
		dllcall(IDirectDrawSurface4.blt, uint, p1, uint, _RECT[], uint, g_globals.surrogate.surface4, uint, 0
											 , uint, DDBLT_KEYSRCOVERRIDE | DDBLT_WAIT, uint, DDBLTFX[], uint)	
		dllcall(IDirectdrawSurface4.blt, uint, g_globals.surrogate.surface4, uint, 0, uint, 0, uint, 0
								             , uint, DDBLT_COLORFILL, uint, DDBLTFX[], uint) 				
				
		return r	
	}
	return 	dllcall(IDirectDrawSurface4.Unlock, uint, g_Globals.surrogate.Surface4, uint, p2)
}

AltIDirectDrawSurface4_blt(p1, p2, p3, p4, p5, p6)
{
	if (GetSurfaceCaps3(p1) & DDSCAPS_ZBUFFER) 
	{
		g_globals.zbuff := p1
		rect[] := p2
		rect.bottom *= g_globals.resolution_correction 
		rect.right *= g_globals.resolution_correction 
		rect.right += g_globals.viewport_correction				
	}
	
	return dllcall(IDirectdrawSurface4.blt, uint, p1, uint, p2, uint, p3, uint, p4
										  , uint, p5, uint, p6, uint) 
}

AltIDirectDrawSurface4_flip(p1, p2, p3)
{	
	DDBLTFX.dwFillDepth  := 0x0
	blt := dllcall(IDirectDrawSurface4.blt, uint, g_globals.zbuff, uint, 0, uint, 0, uint, 0
										  , uint, DDBLT_DEPTHFILL, uint, DDBLTFX[], uint)
	blt := dllcall(IDirectdrawSurface4.blt, uint, p1, uint, 0, uint, g_globals.RenderTarget, uint, 0
										  , uint, DDBLTFAST_NOCOLORKEY | DDBLT_WAIT, uint, DDBLTFX[], uint) 
	
									  
	return blt		
}

AltIDirect3DViewPort3_Clear2(p1, p2, p3, p4, p5, p6, p7)
{
	;needed for HD		
	dllcall(IDirectdrawSurface4.blt, uint, g_globals.RenderTarget, uint, 0, uint, 0, uint, 0
								   , uint, DDBLT_COLORFILL, uint, DDBLTFX[], uint)
	;dllcall(IDirectdrawSurface4.blt, uint, g_globals.surrogateb.surface4, uint, 0, uint, 0, uint, 0
								    ;      , uint, DDBLT_COLORFILL, uint, DDBLTFX[], uint)	
	g_globals.donot := True									  
	return	
    ;fix missing geometry	
	return IDirect3DViewPort3_Clear2(p1, p2, p3, 1, p5, p6, p7)
}